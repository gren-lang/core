module Test.Regex exposing (tests)

import Basics exposing (..)
import String.Regex as Regex exposing (Regex)
import Expect
import String
import Test exposing (..)



tests : Test
tests =
    describe "Regex Tests"
        [ test "Regex.replace" <| \{} ->
            Regex.replace vowels (\_ -> "_") "abc"
                |> Expect.equal "_bc"
        , test "Regex has unicode enabled" <| \{} ->
            Regex.replace smily (\_ -> "_") "you are all ðŸ™‚ aren't you?"
                |> Expect.equal "you are all _ aren't you?"
        , test "Regex.split with never and empty string returns empty string" <| \{} ->
            Regex.split Regex.never ""
                |> Expect.equal [""]
        , test "Regex.split with regex and empty string returns empty string" <| \{} ->
            Regex.split vowels ""
                |> Expect.equal [""]
        , test "Regex.split works with word boundaries" <| \{} ->
            Regex.split (Maybe.withDefault Regex.never (Regex.fromString "\\b")) "word-kebab"
                |> Expect.equal ["word", "-", "kebab"]
        , test "Regex.splitAtMost respects the limit" <| \{} ->
            Regex.splitAtMost 2 (Maybe.withDefault Regex.never (Regex.fromString "\\b")) "word-kebab"
                |> Expect.equal ["word", "-"]
        ]


vowels : Regex
vowels = 
    Regex.fromString "[aeiou]"
        |> Maybe.withDefault Regex.never


smily : Regex
smily = 
    Regex.fromString "[ðŸ™‚]"
        |> Maybe.withDefault Regex.never
